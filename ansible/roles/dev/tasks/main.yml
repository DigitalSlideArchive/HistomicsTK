---
- name: Download miniconda install script
  command: wget -O install_miniconda.sh https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
  args:
    chdir: "{{ root_dir }}"

- name: Run miniconda install script
  command: bash install_miniconda.sh -f -b -p ./miniconda
  args:
    chdir: "{{ root_dir }}"

- name: Update conda packages and add custom channel
  shell: . miniconda/bin/activate ./miniconda && conda update --yes --all && conda config --add channels https://conda.binstar.org/cdeepakroy
  args:
    chdir: "{{ root_dir }}"
    executable: /bin/bash

- name: Install required conda packages
  shell: . miniconda/bin/activate ./miniconda && conda install --yes anaconda-client libgfortran==1.0 setuptools>=19.4 --file "{{ girder_root }}/plugins/HistomicsTK/requirements_c_conda.txt"
  args:
    chdir: "{{ root_dir }}"
    executable: /bin/bash

- name: Ensure we have a locally built Pillow in conda's environment
  shell: . miniconda/bin/activate ./miniconda && pip install --upgrade --no-cache-dir --force-reinstall Pillow
  args:
    chdir: "{{ root_dir }}"
    executable: /bin/bash

- name: Ensure setuptools 19.4 in the local pip environment, too.
  pip: name="setuptools>=19.4"
  sudo: yes

- name: Install girder dev requirements for the web client
  command: girder-install web --dev
  sudo: yes

- name: Install girder server dev requirements
  pip: requirements="{{ girder_root }}/requirements-dev.txt"
  sudo: yes

- name: Install HistomicsTK dev requirements
  pip: requirements="{{ girder_root }}/plugins/HistomicsTK/requirements_dev.txt"
  sudo: yes

- name: Ensure build directory exists
  file:
    path: "{{ root_dir }}/build"
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
    mode: 0775
    state: directory
    recurse: no
  sudo: yes

- name: Make sure all plugin requirements are installed
  pip:
    name: "{{ girder_root }}[plugins]"
    extra_args: "-e"
    state: present
  sudo: yes

- name: Create test running helper script
  template: src=run_tests.sh.j2 dest=/home/vagrant/run_tests.sh mode=0755
  when: vagrant is defined
