---
- name: NodeJS | Add PPA key
  command: "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68576280"
  become: true

- name: NodeJS | Add PPA
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_6.x {{ ansible_distribution_release }} main"
  become: true

- name: NodeJS | Install package
  apt:
    name: nodejs
    install_recommends: no
  become: true

- name: NodeJS | Update npm
  command: "npm install -g npm"
  become: true

- name: Install system package dependencies
  apt:
    state: present
    update_cache: yes
    name:
      - apparmor
      - apt-transport-https
      - ca-certificates
      - fuse
      - libjpeg-dev
      - libmemcached-dev
      - libxslt1-dev
      - memcached
      - nodejs
      - pandoc
      - pandoc-citeproc
      - postfix
      - vim
    install_recommends: no
  become: true

- name: Install node-gyp
  shell: "npm install -g node-gyp-install && /usr/lib/node_modules/node-gyp-install/bin.js"
  become: true

- name: Clone ctk-cli
  git:
    repo: https://github.com/cdeepakroy/ctk-cli.git
    dest: "{{ root_dir }}/ctk-cli"
    accept_hostkey: yes

- name: Clone slicer_cli_web plugin
  git:
    repo: https://github.com/girder/slicer_cli_web.git
    dest: "{{ root_dir }}/slicer_cli_web"
    accept_hostkey: yes
    version: "{{ slicer_cli_web_version }}"

- name: Clone HistomicsTK
  git:
    repo: https://github.com/DigitalSlideArchive/HistomicsTK.git
    dest: "{{ root_dir }}/HistomicsTK"
    accept_hostkey: yes
    version: "{{ histomicstk_version }}"

- name: Clone large_image plugin
  git:
    repo: https://github.com/girder/large_image.git
    dest: "{{ root_dir }}/large_image"
    accept_hostkey: yes
    version: "{{ large_image_version }}"

- name: Clone DSA plugin
  git:
    repo: https://github.com/DigitalSlideArchive/digital_slide_archive.git
    dest: "{{ root_dir }}/digital_slide_archive"
    accept_hostkey: yes
    version: "{{ dsa_version }}"

- name: Clone xtk_demo plugin
  git:
    repo: https://github.com/zachmullen/xtk_demo.git
    dest: "{{ root_dir }}/xtk_demo"
    accept_hostkey: yes
    version: "master"

- name: Get the most recent version of pip
  pip: name=pip extra_args="-U"
  become: true

- name: Install requests (needed to resolve conflict with docker-py)
  pip: name=requests version=2.10.0
  become: true

- name: Install ctk-cli using pip
  pip:
    name: "{{ root_dir }}/ctk-cli"
    extra_args: "-e"
    state: present
  become: true

- name: Create directory for build
  file: state=directory path="{{ root_dir }}/girder/clients/web/static/built"

- name: Install scikit-build (must be installed before HistomicsTK plugin)
  pip:
    name: scikit-build
    extra_args: "-U --upgrade-strategy eager"
    state: present
  become: true

- name: Install numpy (must be installed before large_image plugin)
  pip:
    name: numpy
    extra_args: "-U --upgrade-strategy eager"
    state: present
  become: true

- name: Make sure the six library is updated
  pip:
    name: six
    extra_args: "-U --upgrade-strategy eager"
    state: present
  become: true

- name: Install pylibtiff from github
  pip: name='git+https://github.com/manthey/pylibtiff@0d89ae2edd37db6c84d0add7ba89ad4b87a0f4e9' extra_args='--force-reinstall --ignore-installed --upgrade --no-cache-dir' editable=False
  become: true

- name: Install our external girder plugins - xtk_demo
  command: girder-install plugin -s {{ root_dir }}/xtk_demo
  become: true

- name: Install our external girder plugins - slicer_cli_web
  command: girder-install plugin -s {{ root_dir }}/slicer_cli_web
  become: true

- name: Install our external girder plugins - large_image
  command: girder-install plugin -s {{ root_dir }}/large_image
  become: true

- name: Install large_image extras
  become: true
  pip:
    name: "-v"
    extra_args: "{{ root_dir }}/large_image[memcached,openslide]"
    state: present

- name: Install our external girder plugins - HistomicsTK
  command: girder-install plugin -s {{ root_dir }}/HistomicsTK
  become: true

- name: Install our external girder plugins - digital_slide_archive
  command: girder-install plugin -s {{ root_dir }}/digital_slide_archive
  become: true

- name: Install girder with some optional components
  pip:
    chdir: "{{ girder_root }}"
    extra_args: "-e .[mount]"
    name: "-v"
    state: present
  become: true

- name: Create a directory for the girder mount
  file: state=directory path="{{ root_dir }}/mount"

- name: Install girder-client from our source
  pip:
    chdir: "{{ girder_root }}/clients/python"
    extra_args: "-e"
    name: "."
    state: present
  become: true

- name: Install large_image via setup
  command: python setup.py install
  args:
    chdir: "{{ root_dir }}/large_image"
  become: true

- name: Set the girder configuration file
  template: src=girder.local.cfg.j2 dest={{ girder_root }}/girder/conf/girder.local.cfg

- name: Install girder server dev requirements
  pip:
    requirements: "{{ girder_root }}/requirements-dev.txt"
    chdir: "{{ girder_root }}"
  become: true

- name: Install HistomicsTK dev requirements
  pip:
    requirements: "{{ girder_root }}/plugins/HistomicsTK/{{ item }}"
  become: true
  when: docker is undefined
  with_items:
    - requirements.txt
    - requirements_dev.txt

# Always have a build directory
- name: Ensure build directory exists
  file:
    path: "{{ root_dir }}/build"
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
    mode: 0775
    state: directory
    recurse: no
  become: true

- name: Ensure files are owned by the right user and are public
  file:
    path: "{{ root_dir }}"
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
    mode: u=rwX,g=rX,o=rX
    recurse: yes
  become: true

- name: Add a script to set hosts, ids, and other properties if necessary
  copy:
    src: ../../common/set_environment.py
    dest: "{{ root_dir }}/set_environment.py"
    mode: 0744
    owner: root
  become: true
  when: docker is defined

- name: Add a script to get CLIs and add them to HistomicsTK
  copy:
    src: utils/cli_test.py
    dest: "{{ root_dir }}/cli_test.py"
    mode: 0744
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
  become: true

- name: Build all frontend assets
  command: girder-install web --dev --all-plugins
