version: 2.1
executors:
  linux:
    docker:
      - image: cimg/base:2021.01
  macos:
    macos:
      xcode: 9.4.1
orbs:
  python: circleci/python@1.3.2
commands:
  tox:
    description: "Run tox"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Upgrade virtualenv and tox
          command: pip install -U virtualenv tox
      - run:
          name: Install scikit-build
          command: pip install scikit-build
      - run:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: tox -e << parameters.env >> | cat; test ${PIPESTATUS[0]} -eq 0
  coverage:
    description: "Upload coverage"
    steps:
      - run:
          name: Install Codecov client
          command: pip install codecov==2.1.9
      - run:
          name: Upload coverage
          # Retry as codecov can be flaky
          command: for i in $(seq 1 10); do [ $i -gt 1 ] && echo "retrying $i" && sleep 5; codecov --required --disable search pycov gcov --root project --file .tox/coverage/py_coverage.xml && s=0 && break || s=$?; done; (exit $s)
jobs:
  test:
    parameters:
      os:
        type: executor
      python-version:
        type: string
    executor: << parameters.os >>
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements-dev.txt
          pkg-manager: pip
      - tox:
          env: << parameters.python-version >>
      - coverage
  lint_and_docs:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - tox:
          env: docs,flake8
      - store_artifacts:
          path: docs/_build/html
      - persist_to_workspace:
          root: docs/_build
          paths: html
  docker:
    working_directory: ~/project
    machine: true
    steps:
      - checkout
      - run:
          name: Build HistomicsTK docker
          command: docker build --force-rm -t dsarchive/histomicstk .
      - run:
          name: Get xml for each cli
          command: |
            docker run --rm dsarchive/histomicstk:latest --list_cli
            docker run --rm dsarchive/histomicstk:latest BackgroundIntensity --xml
            docker run --rm dsarchive/histomicstk:latest ColorDeconvolution --xml
            docker run --rm dsarchive/histomicstk:latest ComputeNucleiFeatures --xml
            docker run --rm dsarchive/histomicstk:latest NucleiClassification --xml
            docker run --rm dsarchive/histomicstk:latest NucleiDetection --xml
            docker run --rm dsarchive/histomicstk:latest PositivePixelCount --xml
            docker run --rm dsarchive/histomicstk:latest SeparateStainsMacenkoPCA --xml
            docker run --rm dsarchive/histomicstk:latest SeparateStainsXuSnmf --xml
  wheels:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.6
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup virtual environment
          command: |
            if [ ! -d env ]; then python -m virtualenv env || python -m venv env; fi
            echo ". $CIRCLE_WORKING_DIRECTORY/env/bin/activate" >> $BASH_ENV
      - run:
          name: Install python packages
          command: pip install setuptools_scm twine
      - run:
          name: Build wheels
          command: ./build_wheels.sh
      - store_artifacts:
          path: wheels
      - store_artifacts:
          path: dist
      - run:
          name: List built wheels
          command: |
            ls -al wheels
      - run:
          name: Basic import test
          command: |
            python3 -m pip install --upgrade pip
            cd ..
            python3 -m pip install histomicstk --pre --find-links project/wheels --find-links https://girder.github.io/large_image_wheels
            python3 -c "import histomicstk"
  release:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup virtual environment
          command: |
            if [ ! -d env ]; then python -m virtualenv env || python -m venv env; fi
            echo ". $CIRCLE_WORKING_DIRECTORY/env/bin/activate" >> $BASH_ENV
      - run:
          name: Install python packages
          command: pip install setuptools_scm twine
      - run:
          name: Build wheels
          command: ./build_wheels.sh
      - run:
          name: Release to PyPi
          command: twine upload --verbose wheels/* dist/*
  docs-deploy:
    working_directory: ~/project
    docker:
      - image: node
    steps:
      - checkout
      - attach_workspace:
          at: docs/_build
      - run:
          name: Disable jekyll builds
          command: touch docs/_build/html/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages
            git config user.email "ci-build@kitware.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "aa:85:57:31:5c:82:aa:6b:52:69:de:e7:ed:74:0f:86"
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            touch package.json
            gh-pages --dotfiles --message "[skip ci] Update documentation" --dist docs/_build/html --no-history
workflows:
  version: 2
  ci:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
          matrix:
            parameters:
              os: [linux, macos]
              python-version: ["py36", "py37", "py38", "py39"]
      - lint_and_docs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - wheels:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - release:
          requires:
            - test
            - lint_and_docs
            - docker
            - wheels
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - docs-deploy:
          requires:
            - test
            - lint_and_docs
            - docker
            - wheels
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - sphinx
  periodic:
    triggers:
      - schedule:
          # Run every Tuesday morning at 7 a.m.
          cron: "0 7 * * 2"
          filters:
            branches:
              only:
                - master
    jobs:
      - test:
          matrix:
            parameters:
              os: [linux, macos]
              python-version: ["py36", "py37", "py38", "py39"]
      - lint_and_docs
      - docker
      - wheels
