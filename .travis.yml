language: python
python:
  - "2.7"

cache:
  directories:
    - $HOME/.cache

sudo: required

dist: trusty

services:
  - docker
  - rabbitmq

compiler:
  - gcc

addons:
  apt:
    packages:
      # Pillow dependencies (see
      # https://pillow.readthedocs.org/en/latest/installation.html)
      - libtiff5-dev
      - libjpeg8-dev
      - zlib1g-dev
      - libfreetype6-dev
      - liblcms2-dev
      - libwebp-dev
      - tcl8.6-dev
      - tk8.6-dev
      - python-tk
      # vips
      - libvips-tools
      # openjpeg
      - libglib2.0-dev
      - libjpeg-dev
      - libxml2-dev
      - libpng12-dev
      # openslide
      - autoconf
      - automake
      - libtool
      - pkg-config
      - libcairo2-dev
      - libgdk-pixbuf2.0-dev
      - libxml2-dev
      - libsqlite3-dev
      # girder worker
      - rabbitmq-server
      # pandoc for displaying jupyter notebook examples on ReadTheDocs
      - pandoc
      - pandoc-citeproc

before_install:
    - CACHE="$HOME/.cache" OPENJPEG_VERSION=2.1.2 OPENJPEG_FILE=v2.1.2.tar.gz OPENJPEG_DIR=openjpeg-2.1.2 LIBTIFF_VERSION=4.0.6 OPENSLIDE_VERSION=3.4.1 source .install-openslide.sh

    - GIRDER_VERSION="v1.7.0"
    - GIRDER_WORKER_VERSION=master
    - LARGE_IMAGE_VERSION="girder-1.7"
    - SLICER_CLI_WEB_VERSION="girder-1.7"
    - main_path=$PWD
    - build_path=$PWD/build
    - mkdir -p $build_path

    - girder_path=$build_path/girder
    - rm -fr $girder_path
    - git clone https://github.com/girder/girder.git $girder_path && git -C $girder_path checkout $GIRDER_VERSION
    - ln -sf $main_path $girder_path/plugins/
    - ls -l $girder_path/plugins

    - girder_worker_path=$girder_path/plugins/girder_worker
    - git clone https://github.com/girder/girder_worker.git $girder_worker_path && git -C $girder_worker_path checkout $GIRDER_WORKER_VERSION
    - cp $PWD/plugin_tests/data/girder_worker.cfg $girder_worker_path/girder_worker/worker.local.cfg
    - pip install -U -r $girder_worker_path/requirements.txt -r $girder_worker_path/girder_worker/plugins/girder_io/requirements.txt

    - large_image_path=$girder_path/plugins/large_image
    - git clone https://github.com/DigitalSlideArchive/large_image.git $large_image_path && git -C $large_image_path checkout $LARGE_IMAGE_VERSION

    - slicer_cli_web_path=$girder_path/plugins/slicer_cli_web
    - git clone https://github.com/girder/slicer_cli_web.git $slicer_cli_web_path && git -C $slicer_cli_web_path checkout $SLICER_CLI_WEB_VERSION

    - export MONGO_VERSION=2.6.11
    - export PY_COVG="ON"
    - CACHE=$HOME/.cache source $girder_path/scripts/install_mongo.sh
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version

    - CACHE=$HOME/.cache CMAKE_VERSION=3.1.0 CMAKE_SHORT_VERSION=3.1 source $girder_path/scripts/install_cmake.sh
    - cmake --version

    - mkdir -p $HOME/.cache/node_modules || true
    - ln -sf $HOME/.cache/node_modules .
    - npm install -g npm
    - npm install -g npm-install-retry
    - npm --version
    - npm prune

    - wget -O $build_path/install_miniconda.sh https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    - bash $build_path/install_miniconda.sh -b -p $build_path/miniconda
    - source $build_path/miniconda/bin/activate $build_path/miniconda
    - conda update --yes --quiet --all 'python<=2.7.12'
    - conda config --add channels https://conda.binstar.org/cdeepakroy

install:
    # https://github.com/pypa/pip/issues/2751
    - conda install --yes libgfortran==1.0 ctk-cli==1.4.1 --file $main_path/requirements_c_conda.txt
    - pip install -r $main_path/requirements.txt -r $main_path/requirements_c.txt
    - cd $main_path 
    - python setup.py build_ext --inplace
    - cd $girder_path
    - pip install -U -r requirements.txt -r requirements-dev.txt setuptools==19.4
    - pip install -U -r $large_image_path/requirements.txt
    - pip install -U -r $slicer_cli_web_path/requirements.txt 
    - pip install "git+https://github.com/pearu/pylibtiff@848785a6a9a4e2c6eb6f56ca9f7e8f6b32e523d5" --force-reinstall --ignore-installed --upgrade
    - pip install Pillow --force-reinstall --ignore-installed --upgrade
    - npm-install-retry
    - cd $large_image_path
    - python setup.py install

script:
    - mkdir -p $build_path/girder_testing_build
    - cd $build_path/girder_testing_build
    - cmake -DPYTHON_COVERAGE:BOOL=${PY_COVG} -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DPYTHON_COVERAGE_CONFIG="$main_path/plugin_tests/pycoverage.cfg" -DCOVERAGE_MINIMUM_PASS=19 -DJS_COVERAGE_MINIMUM_PASS=19 -DRUN_CORE_TESTS:BOOL="OFF" -DTEST_PLUGINS:STRING="HistomicsTK" $girder_path
    - make
    - JASMINE_TIMEOUT=15000 ctest -VV -R '(coverage_reset|coverage_combine|HistomicsTK|histomicstk|coverage$|coverage_xml)'

after_success:
    - bash <(curl -s https://codecov.io/bash)
