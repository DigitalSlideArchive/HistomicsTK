language: python
python:
    - "2.7"

cache:
    directories:
        - $HOME/.cache

sudo: required

services:
  - docker

compiler:
    - gcc

addons:
    apt:
        packages:
            # Pillow dependencies (see
            # https://pillow.readthedocs.org/en/latest/installation.html)
            - libtiff4-dev
            - libjpeg8-dev
            - zlib1g-dev
            - libfreetype6-dev
            - liblcms2-dev
            - libwebp-dev
            # vips
            - libvips-tools
            # openslide
            - libopenjpeg-dev
            # pandoc for displaying jupyter notebook examples on ReadTheDocs
            - pandoc
            - pandoc-citeproc

before_install:
    - CACHE="$HOME/.cache" OPENSLIDE_VERSION="3.4.1" source .install-openslide.sh

    - GIRDER_VERSION=d910e905c4196e3046a129d0edb84e5c7e301596
    - GIRDER_WORKER_VERSION=f834d4d3701df7f6f3f64fcd7d3f22d15b3b1db2
    - LARGE_IMAGE_VERSION=60c32b11abb4d5f0d1696221a7e81ab21c611980
    - main_path=$PWD
    - build_path=$PWD/build
    - mkdir -p $build_path

    - girder_path=$build_path/girder
    - rm -fr $girder_path
    - git clone https://github.com/girder/girder.git $girder_path && git -C $girder_path checkout $GIRDER_VERSION
    - ln -sf $main_path $girder_path/plugins/
    - ls -l $girder_path/plugins

    - girder_worker_path=$girder_path/plugins/girder_worker
    - git clone https://github.com/girder/girder_worker.git $girder_worker_path && git -C $girder_worker_path checkout $GIRDER_WORKER_VERSION
    - cp $PWD/plugin_tests/data/girder_worker.cfg $girder_worker_path/girder_worker/worker.local.cfg
    - pip install -U -r $girder_worker_path/requirements.txt -r $girder_worker_path/girder_worker/plugins/girder_io/requirements.txt

    - large_image_path=$girder_path/plugins/large_image
    - git clone https://github.com/DigitalSlideArchive/large_image.git $large_image_path && git -C $large_image_path checkout $LARGE_IMAGE_VERSION

    - export MONGO_VERSION=2.6.11
    - export PY_COVG="ON"
    - CACHE=$HOME/.cache source $girder_path/scripts/install_mongo.sh
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version

    - CACHE=$HOME/.cache CMAKE_VERSION=3.1.0 CMAKE_SHORT_VERSION=3.1 source $girder_path/scripts/install_cmake.sh
    - cmake --version

    - mkdir -p $HOME/.cache/node_modules || true
    - ln -sf $HOME/.cache/node_modules .
    - npm install -g npm
    - npm --version
    - npm prune

    - wget -O $build_path/install_miniconda.sh https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    - bash $build_path/install_miniconda.sh -b -p $build_path/miniconda
    - source $build_path/miniconda/bin/activate $build_path/miniconda
    - conda update --yes --all
    - conda config --add channels https://conda.binstar.org/cdeepakroy

install:
    # https://github.com/pypa/pip/issues/2751
    - conda install --yes libgfortran==1.0 setuptools==19.4 --file $main_path/requirements_c_conda.txt
    - pip install -r $main_path/requirements.txt -r $main_path/requirements_c.txt
    - cd $girder_path
    - pip install -U -r requirements.txt -r requirements-dev.txt -r $main_path/requirements.txt -r $large_image_path/requirements.txt setuptools==19.4
    - npm install

script:
    - mkdir -p $build_path/girder_testing_build
    - cd $build_path/girder_testing_build
    - cmake -DPYTHON_COVERAGE:BOOL=${PY_COVG} -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DRUN_CORE_TESTS:BOOL="OFF" -DTEST_PLUGINS:STRING="HistomicsTK" $girder_path
    - make
    - JASMINE_TIMEOUT=15000 ctest -VV -R HistomicsTK
